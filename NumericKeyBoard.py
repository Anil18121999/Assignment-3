# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'NumericKeyBoard.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtCore import pyqtSignal
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.line_edit_type=""
        
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1012, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(30, 20, 961, 541))
        font = QtGui.QFont()
        font.setPointSize(3)
        self.frame.setFont(font)
        self.frame.setStyleSheet("border: 3px solid black;\n"
"background-image: url(Images/istockphoto-1000x534.jpg);\n"
"border-radius: 30px;")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setGeometry(QtCore.QRect(660, 200, 271, 311))
        self.frame_2.setStyleSheet("background: none;\n"
"background-color: rgb(255, 255, 255);\n"
"border: 2px solid #ffff00;\n"
"border-radius:40px;")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.pushButton = QtWidgets.QPushButton(self.frame_2)
        self.pushButton.setGeometry(QtCore.QRect(10, 250, 251, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("border: 1px solid black;\n"
"color: rgb(255, 255, 255);\n"
"background:none;\n"
"background-color: rgb(143, 145, 135);\n"
"border-top-left-radius:1px;\n"
"\n"
"border-top-right-radius:1px;")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_2.setGeometry(QtCore.QRect(10, 190, 80, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: #0d2e49;")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_3.setGeometry(QtCore.QRect(180, 190, 80, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: #0d2e49;")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_4.setGeometry(QtCore.QRect(100, 190, 71, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_5.setGeometry(QtCore.QRect(10, 70, 80, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);")
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_6.setGeometry(QtCore.QRect(10, 130, 80, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);")
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_7.setGeometry(QtCore.QRect(100, 70, 71, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);")
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_8 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_8.setGeometry(QtCore.QRect(100, 130, 71, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);")
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_9 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_9.setGeometry(QtCore.QRect(180, 130, 80, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_9.setFont(font)
        self.pushButton_9.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);")
        self.pushButton_9.setObjectName("pushButton_9")
        self.pushButton_10 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_10.setGeometry(QtCore.QRect(180, 70, 80, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_10.setFont(font)
        self.pushButton_10.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);")
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_11 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_11.setGeometry(QtCore.QRect(10, 10, 80, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_11.setFont(font)
        self.pushButton_11.setMouseTracking(False)
        self.pushButton_11.setStyleSheet("background:none;\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);\n"
"border-bottom-left-radius:1px;\n"
"color: rgb(255, 255, 255);")
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_12 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_12.setGeometry(QtCore.QRect(100, 10, 71, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_12.setFont(font)
        self.pushButton_12.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);")
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_13 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_13.setGeometry(QtCore.QRect(180, 10, 80, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_13.setFont(font)
        self.pushButton_13.setStyleSheet("color: rgb(255, 255, 255);\n"
"background:none;\n"
"border: 1px solid black;\n"
"background-color: rgb(37, 150, 190);\n"
"border-bottom-right-radius:1px;")
        self.pushButton_13.setObjectName("pushButton_13")
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setGeometry(QtCore.QRect(40, 100, 181, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background: none;\n"
"border: 1px solid black;\n"
"border-radius: 12px;")
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(200, 20, 561, 41))
        self.label.setStyleSheet("border: 1px solid #ffaa00;\n"
"border-radius: 12px;\n"
"background: none;\n"
"background-color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_2.setGeometry(QtCore.QRect(280, 100, 181, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("background: none;\n"
"border: 1px solid black;\n"
"border-radius: 12px;")
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_2.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_3.setGeometry(QtCore.QRect(510, 100, 181, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setStyleSheet("background: none;\n"
"border: 1px solid black;\n"
"border-radius: 12px;")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_3.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_4.setGeometry(QtCore.QRect(730, 100, 181, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setStyleSheet("background: none;\n"
"border: 1px solid black;\n"
"border-radius: 12px;")
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_4.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.lineEdit_4.setClearButtonEnabled(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        MainWindow.setCentralWidget(self.centralwidget)
   
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "OK"))
        self.pushButton_2.setText(_translate("MainWindow", "."))
        self.pushButton_3.setText(_translate("MainWindow", "←"))
        self.pushButton_4.setText(_translate("MainWindow", "0"))
        self.pushButton_5.setText(_translate("MainWindow", "4"))
        self.pushButton_6.setText(_translate("MainWindow", "7"))
        self.pushButton_7.setText(_translate("MainWindow", "5"))
        self.pushButton_8.setText(_translate("MainWindow", "8"))
        self.pushButton_9.setText(_translate("MainWindow", "9"))
        self.pushButton_10.setText(_translate("MainWindow", "6"))
        self.pushButton_11.setText(_translate("MainWindow", "1"))
        self.pushButton_12.setText(_translate("MainWindow", "2"))
        self.pushButton_13.setText(_translate("MainWindow", "3"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Age"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:600; text-decoration: underline;\">Numerical KeyBoard</span></p></body></html>"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "Mobile no."))
        self.lineEdit_3.setPlaceholderText(_translate("MainWindow", "Pincode"))
        self.lineEdit_4.setPlaceholderText(_translate("MainWindow", "Road no."))
        self.frame_2.hide()
        self.frame.mousePressEvent = lambda event: self.frame_2.hide()
        self.lineEdit.mousePressEvent = lambda event: self.set_keyboard_position_to('age')
        self.lineEdit_2.mousePressEvent = lambda event: self.set_keyboard_position_to('mobile_no.')
        self.lineEdit_3.mousePressEvent = lambda event: self.set_keyboard_position_to('pincode')
        self.lineEdit_4.mousePressEvent = lambda event: self.set_keyboard_position_to('road_no.')      
        self.pushButton.clicked.connect(self.frame_2.close)
        self.on_button_clicked()
        
    # setting the value of the button
    def on_button_clicked(self):
        # lambda function is a mini function, that it calles a on_number_ clicked function with the assigned value 
        self.pushButton_4.clicked.connect(lambda _, num = int(0): self.on_number_clicked(num))
        self.pushButton_11.clicked.connect(lambda _, num = int(1): self.on_number_clicked(num))
        self.pushButton_12.clicked.connect(lambda _, num = int(2): self.on_number_clicked(num))
        self.pushButton_13.clicked.connect(lambda _, num = int(3): self.on_number_clicked(num))
        self.pushButton_5.clicked.connect(lambda _, num = int(4): self.on_number_clicked(num))
        self.pushButton_7.clicked.connect(lambda _, num = int(5): self.on_number_clicked(num))
        self.pushButton_10.clicked.connect(lambda _, num = int(6): self.on_number_clicked(num))
        self.pushButton_6.clicked.connect(lambda _, num = int(7): self.on_number_clicked(num))
        self.pushButton_8.clicked.connect(lambda _, num = int(8): self.on_number_clicked(num))
        self.pushButton_9.clicked.connect(lambda _, num = int(9): self.on_number_clicked(num))
        self.pushButton_2.clicked.connect(lambda _, num = str("."): self.on_number_clicked(num))
        self.pushButton_3.clicked.connect(self.on_back_button_clicked)
    
    # it delete the entered value from respected line edit
    def on_back_button_clicked(self): 
        
        line_edit_mapping_delete = {
                "age": self.lineEdit,
                "mobile_no": self.lineEdit_2,
                "pincode": self.lineEdit_3,
                "road_no": self.lineEdit_4
        }
        
        line_edit = line_edit_mapping_delete.get(self.line_edit_type)
        if line_edit is None:
                print("Invalid line edit type")
                return
        # cursor position is finding the position of the cursor in the line edit 
        cursor_position = line_edit.cursorPosition()
        if cursor_position != 0:
                line_edit.setText(line_edit.text()[:cursor_position - 1] + line_edit.text()[cursor_position:])
                
                line_edit.setCursorPosition(cursor_position - 1)
        else:
                print("Cursor index is 0")


    # once the button is clicked then it takes that value and set that to respected line edit      
    def on_number_clicked(self, num):
        # dictionary mapping the line edit with respected name passed as the aurgument 
        line_edit_mapping = {
             "age":self.lineEdit,
             "mobile_no":self.lineEdit_2,
             "pincode":self.lineEdit_3,
             "road_no":self.lineEdit_4
             
        }

        line_edit = line_edit_mapping.get(self.line_edit_type)

        if line_edit is None:
             print("Invalid Line Edit")
             return
        
        if (num == "."):
             # this condition checks dot should be type once in line edit
             if line_edit.text().find(".") == -1 : # find and index, here find is returing the index value of the dot
                # cursor position is finding the position of the cursor in the line edit 
                cursor_position = line_edit.cursorPosition()     
                # Here we are slicing the line edit in two part form the cursor position and adding the new number where the cursor is
                line_edit.setText(str(line_edit.text()[:cursor_position]) + str(num) + str(line_edit.text()[cursor_position:]))
                # After adding the new number cursor should move to ahead of that number 
                line_edit.setCursorPosition(cursor_position + 1)
             else:
                print("Already '.' pressed")   
        else:
             cursor_position = line_edit.cursorPosition()
             line_edit.setText(str(line_edit.text()[:cursor_position]) + str(num) + str(line_edit.text()[cursor_position:]))
             line_edit.setCursorPosition(cursor_position + 1)
             
                  


    # setting the keyboard position to below the line edit 
    def set_keyboard_position_to(self, line_edit):
        # dictionary mapping the line edit with there properties 
        properties = {
             "age": {"type": "age", "position": (30, 180), "size": (271, 311)},
             "mobile_no.": {"type": "mobile_no", "position": (230, 180), "size": (271, 311)},
             "pincode": {"type": "pincode", "position": (465, 180), "size": (271, 311)},
             "road_no.": {"type": "road_no", "position": (660, 180), "size": (271, 311)}
        }

        # Here prop is retriving the properties from given line edit name 
        prop = properties.get(line_edit, {})
        
        # extracting the type, position and size from the dictionary 
        self.line_edit_type = prop.get("type", "")
        position = prop.get("position", (0, 0))
        size = prop.get("size", (0, 0))
        # setting the frame position and size
        self.frame_2.move(*(position))
        self.frame_2.setGeometry(*((position) + size))

        if self.line_edit_type :
                self.frame_2.show() 
        else:
                None


       
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
